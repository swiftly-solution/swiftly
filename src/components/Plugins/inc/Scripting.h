#ifndef _components_plugins_scripting_h
#define _components_plugins_scripting_h

#include "../../../common.h"
#include "../../../hooks/Hooks.h"
#include "../../../player/Player.h"
#include "../../../player/PlayerManager.h"
#include "../../../logs/Log.h"
#include "../../../http/ContentTypes.h"
#include "PluginsComponent.h"
#include "Plugin.h"

typedef void (*OnProgramLoadFunction)(const char *, const char *);

typedef void (*Plugin_WrapperVoid)(...);
typedef bool (*Plugin_WrapperBool)(...);

enum PlayerStat : int
{
    KILLS = 0,
    DEATHS = 1,
    ASSISTS = 2,
    DAMAGE = 3
};

enum PluginState : int
{
    STOPPED = 0,
    STARTED = 1
};

SMM_API void scripting_Commands_RegisterCommand(const char *pluginName, const char *name, void *funcPtr);
SMM_API void scripting_Commands_UnregisterCommand(const char *name);

SMM_API const char *scripting_Configuration_Fetch(const char *key);
SMM_API uint32 scripting_Configuration_FetchArraySize(const char *key);
SMM_API bool scripting_Configuration_Exists(const char *key);
SMM_API void scripting_Configuration_ReloadConfiguration(const char *key);

SMM_API int scripting_Server_GetConvarInt(const char *name);
SMM_API unsigned int scripting_Server_GetConvarUint(const char *name);
SMM_API bool scripting_Server_GetConvarBool(const char *name);
SMM_API float scripting_Server_GetConvarFloat(const char *name);
SMM_API const char *scripting_Server_GetConvarString(const char *name);
SMM_API EConVarType scripting_Server_GetConvarType(const char *name);
SMM_API void scripting_Server_SetConvar(const char *name, ...);

SMM_API bool scripting_Database_Connect(const char *connectionName);
SMM_API const char *scripting_Database_EscapeString(const char *connectionName, const char *value);
std::vector<std::map<const char *, std::any>> scripting_Database_QueryRaw(const char *connectionName, const char *query);
SMM_API const char *scripting_Database_Query(const char *connectionName, const char *query);

SMM_API uint32_t scripting_Entity_Create(const char *classname);
SMM_API void scripting_Entity_Spawn(uint32_t entityID);
SMM_API void scripting_Entity_Destroy(uint32_t entityID);
SMM_API void scripting_Entity_SetModel(uint32_t entityID, const char *model);
SMM_API void scripting_Entity_AcceptInput(uint32_t entityID, const char *input, const char *activator, const char *caller, double *value);
Vector scripting_Entity_GetCoordsRaw(uint32_t entityID);
SMM_API const char *scripting_Entity_GetCoords(uint32_t entityID);
SMM_API void scripting_Entity_SetCoords(uint32_t entityID, float x, float y, float z);
QAngle scripting_Entity_GetAnglesRaw(uint32_t entityID);
SMM_API const char *scripting_Entity_GetAngles(uint32_t entityID);
SMM_API void scripting_Entity_SetAngles(uint32_t entityID, float x, float y, float z);
Color scripting_Entity_GetColorsRaw(uint32_t entityID);
SMM_API const char *scripting_Entity_GetColors(uint32_t entityID);
SMM_API void scripting_Entity_SetColors(uint32_t entityID, int r, int g, int b, int a);
SMM_API void scripting_Entity_SetCollisionGroup(uint32_t entityID, Collision_Group_t collisionGroup);

SMM_API bool scripting_OnClientChat(CBasePlayerController *controller, const char *text, bool teamonly);
SMM_API bool scripting_OnClientGameMessage(CBasePlayerController *controller, int destination, const char *text);
SMM_API bool scripting_ShouldHearVoice(Player *player);

SMM_API void scripting_Precacher_AddSound(const char *path);

SMM_API const char *scripting_Files_Read(const char *path);
SMM_API void scripting_Files_Append(const char *path, const char *content, bool hasdate);
SMM_API void scripting_Files_Write(const char *path, const char *content, bool hasdate);
SMM_API void scripting_Files_Delete(const char *path);
SMM_API const char *scripting_Files_GetBase(const char *path);
SMM_API bool scripting_Files_ExistsPath(const char *path);
SMM_API bool scripting_Files_IsDirectory(const char *path);
SMM_API const char **scripting_Files_FetchFileNames(const char *path);
SMM_API const char **scripting_Files_FetchDirectories(const char *path);
SMM_API bool scripting_Files_CreateDirectory(const char *path);

SMM_API uint64_t scripting_HTTP_CreateRequest(const char *domain);
SMM_API void scripting_HTTP_SetBody(uint64_t requestID, const char *body);
SMM_API void scripting_HTTP_AddHeader(uint64_t requestID, const char *key, const char *value);
SMM_API void scripting_HTTP_DeleteHeader(uint64_t requestID, const char *key);
SMM_API void scripting_HTTP_AddMultipartFile(uint64_t requestID, const char *field, const char *content, const char *filename, const char *file_content_type);
SMM_API void scripting_HTTP_SetContentType(uint64_t requestID, ContentType content_type);
SMM_API void scripting_HTTP_SetBasicAuthentication(uint64_t requestID, const char *username, const char *password);
SMM_API void scripting_HTTP_SetBearerAuthenticationToken(uint64_t requestID, const char *token);
SMM_API void scripting_HTTP_SetFollowRedirect(uint64_t requestID, bool follow);
SMM_API const char *scripting_HTTP_GetBody(uint64_t requestID);
SMM_API int scripting_HTTP_GetStatusCode(uint64_t requestID);
SMM_API const char *scripting_HTTP_GetError(uint64_t requestID);
SMM_API void scripting_HTTP_Get(uint64_t requestID, const char *path);
SMM_API void scripting_HTTP_Delete(uint64_t requestID, const char *path);
SMM_API void scripting_HTTP_Post(uint64_t requestID, const char *path);
SMM_API void scripting_HTTP_Put(uint64_t requestID, const char *path);
SMM_API void scripting_HTTP_Patch(uint64_t requestID, const char *path);
SMM_API void scripting_HTTP_Close(uint64_t requestID);

SMM_API void scripting_Logger_CreateLogger(const char *plugin_name);
SMM_API void scripting_Logger_WriteLog(const char *plugin_name, ELogType log_type, const char *text);

SMM_API const char *scripting_Player_GetName(uint32 playerId);
SMM_API void scripting_Player_SetName(uint32 playerId, const char *name);
SMM_API uint64 scripting_Player_GetSteamID(uint32 playerId);
SMM_API float scripting_Player_GetGravity(uint32 playerId);
SMM_API bool scripting_Player_IsFirstSpawn(uint32 playerId);
SMM_API void scripting_Player_SetGravity(uint32 playerId, float gravity);
SMM_API float scripting_Player_GetSpeed(uint32 playerId);
SMM_API void scripting_Player_SetSpeed(uint32 playerId, float speed);
SMM_API const char *scripting_Player_GetSteamID2(uint32 playerId);
SMM_API void scripting_Player_SetFlashDuration(uint32 playerId, float duration);
SMM_API void scripting_Player_Drop(uint32 playerId, int reason);
SMM_API bool scripting_Player_IsAuthenticated(uint32 playerId);
SMM_API const char *scripting_Player_GetConvar(uint32 playerId, const char *name);
SMM_API void scripting_Player_SendMessage(uint32 playerId, int dest, const char *text);
SMM_API uint8 scripting_Player_GetTeam(uint32 playerId);
SMM_API void scripting_Player_SetTeam(uint32 playerId, int team);
SMM_API int scripting_Player_GetHealth(uint32 playerId);
SMM_API void scripting_Player_SetHealth(uint32 playerId, int health);
SMM_API int scripting_Player_GetMaxHealth(uint32 playerId);
SMM_API void scripting_Player_SetMaxHealth(uint32 playerId, int health);
SMM_API void scripting_Player_TakeHealth(uint32 playerId, int health);
SMM_API void scripting_Player_Kill(uint32 playerId);
SMM_API void scripting_Players_SendMessage(int dest, const char *text);
SMM_API int scripting_Player_GetArmor(uint32 playerId);
SMM_API void scripting_Player_SetArmor(uint32 playerId, int armor);
SMM_API void scripting_Player_TakeArmor(uint32 playerId, int armor);
SMM_API const char *scripting_Player_GetClanTag(uint32 playerId);
SMM_API void scripting_Player_SetClanTag(uint32 playerId, const char *tag);
SMM_API void scripting_Player_SetVar(uint32 playerId, const char *name, int type, ...);
SMM_API const char *scripting_Player_GetVar(uint32 playerId, const char *name);
SMM_API uint32 scripting_Player_GetConnectedTime(uint32 playerId);
SMM_API int scripting_Player_FetchMatchStat(uint32 playerId, PlayerStat stat);
SMM_API void scripting_Player_SetMatchStat(uint32 playerId, PlayerStat stat, int value);
SMM_API const char *scripting_Player_GetIPAddress(uint32 playerId);
SMM_API const char *scripting_Player_GetCoords(uint32 playerId);
SMM_API void scripting_Player_SetCoords(uint32 playerId, float x, float y, float z);
SMM_API const char *scripting_Player_GetVelocity(uint32 playerId);
SMM_API void scripting_Player_SetVelocity(uint32 playerId, float x, float y, float z);
SMM_API int scripting_Player_GetMoney(uint32 playerId);
SMM_API void scripting_Player_SetMoney(uint32 playerId, int money);
SMM_API void scripting_Player_TakeMoney(uint32 playerId, int money);
SMM_API void scripting_Player_SetHealthShotBoostEffectExpirationTime(uint32 playerId, float expireTime);
SMM_API void scripting_Player_ShowMenu(uint32 playerId, const char *menuid);
SMM_API void scripting_Player_HideMenu(uint32 playerId);
SMM_API int scripting_Player_GetLatency(uint32 playerId);
SMM_API void scripting_Player_SetConvar(uint32 playerId, const char *cvarname, const char *cvarvalue);
SMM_API void scripting_Player_ExecuteCommand(uint32 playerId, const char *cmd);
SMM_API void scripting_Player_SetCompetitiveRanking(uint32 playerId, int ranking);
SMM_API void scripting_Player_SetCompetitiveRankType(uint32 playerId, int type);
SMM_API void scripting_Player_Weapons_SetActiveWeapon(uint32 playerId, uint32 slot);
SMM_API void scripting_Player_Weapons_Drop(uint32 playerId);
SMM_API void scripting_Player_Weapons_Remove(uint32 playerId);
SMM_API void scripting_Player_Weapons_Give(uint32 playerId, const char *name);
SMM_API uint32_t scripting_Player_Weapons_GetWeaponID(uint32 playerId, uint32 slot);

QAngle scripting_Player_GetEyeAnglesRaw(uint32 playerId);
SMM_API const char *scripting_Player_GetEyeAngles(uint32 playerId);
SMM_API void scripting_Player_SetEyeAngles(uint32 playerId, float x, float y, float z);

SMM_API void scripting_Player_Respawn(uint32 playerId);

SMM_API void scripting_Player_Weapon_Remove(uint32 playerId, uint32 slot);
SMM_API void scripting_Player_Weapon_Drop(uint32 playerId, uint32 slot);

SMM_API void scripting_Player_Weapon_SetClipAmmo(uint32 playerId, uint32 slot, int ammo);
SMM_API void scripting_Player_Weapon_SetClip2Ammo(uint32 playerId, uint32 slot, int ammo);
SMM_API void scripting_Player_Weapon_SetReserveAmmo(uint32 playerId, uint32 slot, int ammo);
SMM_API uint32_t scripting_Player_Weapon_GetSilencerType(uint32 playerId, uint32 slot);
SMM_API int32_t scripting_Player_Weapon_GetNextPrimaryAttackTick(uint32 playerId, uint32 slot);
SMM_API int32_t scripting_Player_Weapon_GetNextSecondaryAttackTick(uint32 playerId, uint32 slot);
SMM_API void scripting_Player_Weapon_SetNextPrimaryAttackTick(uint32 playerId, uint32 slot, int32_t tick);
SMM_API void scripting_Player_Weapon_SetNextSecondaryAttackTick(uint32 playerId, uint32 slot, int32_t tick);
SMM_API float scripting_Player_Weapon_GetNextPrimaryAttackTickRatio(uint32 playerId, uint32 slot);
SMM_API float scripting_Player_Weapon_GetNextSecondaryAttackTickRatio(uint32 playerId, uint32 slot);
SMM_API void scripting_Player_Weapon_SetNextPrimaryAttackTickRatio(uint32 playerId, uint32 slot, float ratio);
SMM_API void scripting_Player_Weapon_SetNextSecondaryAttackTickRatio(uint32 playerId, uint32 slot, float ratio);

SMM_API void scripting_Player_Weapon_SetStatTrack(uint32 playerId, uint32 slot, bool stattrack);
SMM_API void scripting_Player_Weapon_SetWear(uint32 playerId, uint32 slot, float wear);
SMM_API void scripting_Player_Weapon_SetPaintKit(uint32 playerId, uint32 slot, int paintkit);
SMM_API void scripting_Player_Weapon_SetSeed(uint32 playerId, uint32 slot, int seed);

SMM_API bool scripting_Player_Weapon_GetStatTrack(uint32 playerId, uint32 slot);
SMM_API float scripting_Player_Weapon_GetWear(uint32 playerId, uint32 slot);
SMM_API int scripting_Player_Weapon_GetPaintKit(uint32 playerId, uint32 slot);
SMM_API int scripting_Player_Weapon_GetSeed(uint32 playerId, uint32 slot);
SMM_API void scripting_Player_Weapon_SetDefaultChangeSkinAttributes(uint32 playerId, uint32 slot);
SMM_API void scripting_Player_Weapon_SetNametag(uint32 playerId, uint32 slot, const char *text);

SMM_API bool scripting_Player_Weapon_Exists(uint32 playerId, uint32 slot);

SMM_API uint32 scripting_Player_Weapon_GetType(uint32 playerId, uint32 slot);
SMM_API const char *scripting_Player_Weapon_GetName(uint32 playerId, uint32 slot);

SMM_API void scripting_Player_SetDesiredFOV(uint32 playerId, uint32_t fov);
SMM_API uint32_t scripting_Player_GetDesiredFOV(uint32 playerId);

SMM_API uint32_t scripting_Player_GetHighestGeneratedServerViewAngleChangeIndex(uint32 playerId);
SMM_API void scripting_Player_SetHighestGeneratedServerViewAngleChangeIndex(uint32 playerId, uint32_t val);
SMM_API uint32_t scripting_Player_GetHideHUD(uint32 playerId);
SMM_API void scripting_Player_SetHideHUD(uint32 playerId, uint32_t val);
SMM_API bool scripting_Player_GetInitHUD(uint32 playerId);
SMM_API void scripting_Player_SetInitHUD(uint32 playerId, bool val);
SMM_API float scripting_Player_GetHltvReplayDelay(uint32 playerId);
SMM_API void scripting_Player_SetHltvReplayDelay(uint32 playerId, float val);
SMM_API float scripting_Player_GetHltvReplayEnd(uint32 playerId);
SMM_API void scripting_Player_SetHltvReplayEnd(uint32 playerId, float val);
SMM_API uint16_t scripting_Player_GetCharacterDefIndex(uint32 playerId);
SMM_API void scripting_Player_SetCharacterDefIndex(uint32 playerId, uint16_t val);
SMM_API bool scripting_Player_GetHasFemaleVoice(uint32 playerId);
SMM_API void scripting_Player_SetHasFemaleVoice(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetInHostageResetZone(uint32 playerId);
SMM_API void scripting_Player_SetInHostageResetZone(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetInBuyZone(uint32 playerId);
SMM_API void scripting_Player_SetInBuyZone(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetWasInBuyZone(uint32 playerId);
SMM_API void scripting_Player_SetWasInBuyZone(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetInHostageRescueZone(uint32 playerId);
SMM_API void scripting_Player_SetInHostageRescueZone(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetInBombZone(uint32 playerId);
SMM_API void scripting_Player_SetInBombZone(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetWasInHostageRescueZone(uint32 playerId);
SMM_API void scripting_Player_SetWasInHostageRescueZone(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetRetakesOffering(uint32 playerId);
SMM_API void scripting_Player_SetRetakesOffering(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetRetakesOfferingCard(uint32 playerId);
SMM_API void scripting_Player_SetRetakesOfferingCard(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetRetakesHasDefuseKit(uint32 playerId);
SMM_API void scripting_Player_SetRetakesHasDefuseKit(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetRetakesMVPLastRound(uint32 playerId);
SMM_API void scripting_Player_SetRetakesMVPLastRound(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetRetakesMVPBoostItem(uint32 playerId);
SMM_API void scripting_Player_SetRetakesMVPBoostItem(uint32 playerId, int32_t val);
SMM_API float scripting_Player_GetLandseconds(uint32 playerId);
SMM_API void scripting_Player_SetLandseconds(uint32 playerId, float val);
SMM_API int32_t scripting_Player_GetAimPunchTickBase(uint32 playerId);
SMM_API void scripting_Player_SetAimPunchTickBase(uint32 playerId, int32_t val);
SMM_API float scripting_Player_GetAimPunchTickFraction(uint32 playerId);
SMM_API void scripting_Player_SetAimPunchTickFraction(uint32 playerId, float val);
SMM_API bool scripting_Player_GetIsBuyMenuOpen(uint32 playerId);
SMM_API void scripting_Player_SetIsBuyMenuOpen(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetLastHeadBoneTransformIsValid(uint32 playerId);
SMM_API void scripting_Player_SetLastHeadBoneTransformIsValid(uint32 playerId, bool val);
SMM_API float scripting_Player_GetLastLandTime(uint32 playerId);
SMM_API void scripting_Player_SetLastLandTime(uint32 playerId, float val);
SMM_API bool scripting_Player_GetOnGroundLastTick(uint32 playerId);
SMM_API void scripting_Player_SetOnGroundLastTick(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetPlayerLocked(uint32 playerId);
SMM_API void scripting_Player_SetPlayerLocked(uint32 playerId, int32_t val);
SMM_API float scripting_Player_GetTimeOfLastInjury(uint32 playerId);
SMM_API void scripting_Player_SetTimeOfLastInjury(uint32 playerId, float val);
SMM_API float scripting_Player_GetNextSprayDecalTime(uint32 playerId);
SMM_API void scripting_Player_SetNextSprayDecalTime(uint32 playerId, float val);
SMM_API bool scripting_Player_GetNextSprayDecalTimeExpedited(uint32 playerId);
SMM_API void scripting_Player_SetNextSprayDecalTimeExpedited(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetRagdollDamageBone(uint32 playerId);
SMM_API void scripting_Player_SetRagdollDamageBone(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetRagdollDamageHeadshot(uint32 playerId);
SMM_API void scripting_Player_SetRagdollDamageHeadshot(uint32 playerId, bool val);
SMM_API uint8_t scripting_Player_GetEconGlovesChanged(uint32 playerId);
SMM_API void scripting_Player_SetEconGlovesChanged(uint32 playerId, uint8_t val);
SMM_API bool scripting_Player_GetSkipOneHeadConstraintUpdate(uint32 playerId);
SMM_API void scripting_Player_SetSkipOneHeadConstraintUpdate(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetAutoKickDisabled(uint32 playerId);
SMM_API void scripting_Player_SetAutoKickDisabled(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetAvailableEntitySteadyState(uint32 playerId);
SMM_API void scripting_Player_SetAvailableEntitySteadyState(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetPredict(uint32 playerId);
SMM_API void scripting_Player_SetPredict(uint32 playerId, bool val);
SMM_API uint32_t scripting_Player_GetTickBase(uint32 playerId);
SMM_API void scripting_Player_SetTickBase(uint32 playerId, uint32_t val);
SMM_API bool scripting_Player_GetGamePaused(uint32 playerId);
SMM_API void scripting_Player_SetGamePaused(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetHasAnySteadyStateEnts(uint32 playerId);
SMM_API void scripting_Player_SetHasAnySteadyStateEnts(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetIsHLTV(uint32 playerId);
SMM_API void scripting_Player_SetIsHLTV(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetIsLowViolence(uint32 playerId);
SMM_API void scripting_Player_SetIsLowViolence(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetLagCompensation(uint32 playerId);
SMM_API void scripting_Player_SetLagCompensation(uint32 playerId, bool val);
SMM_API float scripting_Player_GetLastEntitySteadyState(uint32 playerId);
SMM_API void scripting_Player_SetLastEntitySteadyState(uint32 playerId, float val);
SMM_API int32_t scripting_Player_GetLastLateCommandExecuted(uint32 playerId);
SMM_API void scripting_Player_SetLastLateCommandExecuted(uint32 playerId, int32_t val);
SMM_API float scripting_Player_GetLastPlayerTalkTime(uint32 playerId);
SMM_API void scripting_Player_SetLastPlayerTalkTime(uint32 playerId, float val);
SMM_API int32_t scripting_Player_GetLastRealCommandNumberExecuted(uint32 playerId);
SMM_API void scripting_Player_SetLastRealCommandNumberExecuted(uint32 playerId, int32_t val);
SMM_API float scripting_Player_GetLerpTime(uint32 playerId);
SMM_API void scripting_Player_SetLerpTime(uint32 playerId, float val);

SMM_API bool scripting_Player_GetHasCommunicationAbuseMute(uint32 playerId);
SMM_API void scripting_Player_SetHasCommunicationAbuseMute(uint32 playerId, bool val);
SMM_API uint8_t scripting_Player_GetPendingTeamNum(uint32 playerId);
SMM_API void scripting_Player_SetPendingTeamNum(uint32 playerId, uint8_t val);
SMM_API float scripting_Player_GetForceTeamTime(uint32 playerId);
SMM_API void scripting_Player_SetForceTeamTime(uint32 playerId, float val);
SMM_API int32_t scripting_Player_GetCompTeammateColor(uint32 playerId);
SMM_API void scripting_Player_SetCompTeammateColor(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetEverPlayedOnTeam(uint32 playerId);
SMM_API void scripting_Player_SetEverPlayedOnTeam(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetAttemptedToGetColor(uint32 playerId);
SMM_API void scripting_Player_SetAttemptedToGetColor(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetTeammatePreferredColor(uint32 playerId);
SMM_API void scripting_Player_SetTeammatePreferredColor(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetTeamChanged(uint32 playerId);
SMM_API void scripting_Player_SetTeamChanged(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetInSwitchTeam(uint32 playerId);
SMM_API void scripting_Player_SetInSwitchTeam(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetHasSeenJoinGame(uint32 playerId);
SMM_API void scripting_Player_SetHasSeenJoinGame(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetJustBecameSpectator(uint32 playerId);
SMM_API void scripting_Player_SetJustBecameSpectator(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetSwitchTeamsOnNextRoundReset(uint32 playerId);
SMM_API void scripting_Player_SetSwitchTeamsOnNextRoundReset(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetRemoveAllItemsOnNextRoundReset(uint32 playerId);
SMM_API void scripting_Player_SetRemoveAllItemsOnNextRoundReset(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetCompetitiveRankingPredicted_Win(uint32 playerId);
SMM_API void scripting_Player_SetCompetitiveRankingPredicted_Win(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetCompetitiveRankingPredicted_Loss(uint32 playerId);
SMM_API void scripting_Player_SetCompetitiveRankingPredicted_Loss(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetCompetitiveRankingPredicted_Tie(uint32 playerId);
SMM_API void scripting_Player_SetCompetitiveRankingPredicted_Tie(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetEndMatchNextMapVote(uint32 playerId);
SMM_API void scripting_Player_SetEndMatchNextMapVote(uint32 playerId, int32_t val);
SMM_API uint16_t scripting_Player_GetActiveQuestId(uint32 playerId);
SMM_API void scripting_Player_SetActiveQuestId(uint32 playerId, uint16_t val);
SMM_API uint32_t scripting_Player_GetPlayerTvControlFlags(uint32 playerId);
SMM_API void scripting_Player_SetPlayerTvControlFlags(uint32 playerId, uint32_t val);
SMM_API int32_t scripting_Player_GetDraftIndex(uint32 playerId);
SMM_API void scripting_Player_SetDraftIndex(uint32 playerId, int32_t val);
SMM_API uint32_t scripting_Player_GetQueuedModeDisconnectionTimestamp(uint32 playerId);
SMM_API void scripting_Player_SetQueuedModeDisconnectionTimestamp(uint32 playerId, uint32_t val);
SMM_API uint32_t scripting_Player_GetAbandonRecordedReason(uint32 playerId);
SMM_API void scripting_Player_SetAbandonRecordedReason(uint32 playerId, uint32_t val);
SMM_API bool scripting_Player_GetCannotBeKicked(uint32 playerId);
SMM_API void scripting_Player_SetCannotBeKicked(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetEverFullyConnected(uint32 playerId);
SMM_API void scripting_Player_SetEverFullyConnected(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetAbandonAllowsSurrender(uint32 playerId);
SMM_API void scripting_Player_SetAbandonAllowsSurrender(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetAbandonOffersInstantSurrender(uint32 playerId);
SMM_API void scripting_Player_SetAbandonOffersInstantSurrender(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetDisconnection1MinWarningPrinted(uint32 playerId);
SMM_API void scripting_Player_SetDisconnection1MinWarningPrinted(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetScoreReported(uint32 playerId);
SMM_API void scripting_Player_SetScoreReported(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetDisconnectionTick(uint32 playerId);
SMM_API void scripting_Player_SetDisconnectionTick(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetControllingBot(uint32 playerId);
SMM_API void scripting_Player_SetControllingBot(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetHasControlledBotThisRound(uint32 playerId);
SMM_API void scripting_Player_SetHasControlledBotThisRound(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetHasBeenControlledByPlayerThisRound(uint32 playerId);
SMM_API void scripting_Player_SetHasBeenControlledByPlayerThisRound(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetBotsControlledThisRound(uint32 playerId);
SMM_API void scripting_Player_SetBotsControlledThisRound(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetCanControlObservedBot(uint32 playerId);
SMM_API void scripting_Player_SetCanControlObservedBot(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetDesiredObserverMode(uint32 playerId);
SMM_API void scripting_Player_SetDesiredObserverMode(uint32 playerId, int32_t val);
SMM_API uint16_t scripting_Player_GetPawnCharacterDefIndex(uint32 playerId);
SMM_API void scripting_Player_SetPawnCharacterDefIndex(uint32 playerId, uint16_t val);
SMM_API int32_t scripting_Player_GetPawnLifetimeStart(uint32 playerId);
SMM_API void scripting_Player_SetPawnLifetimeStart(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetPawnLifetimeEnd(uint32 playerId);
SMM_API void scripting_Player_SetPawnLifetimeEnd(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetPawnBotDifficulty(uint32 playerId);
SMM_API void scripting_Player_SetPawnBotDifficulty(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetScore(uint32 playerId);
SMM_API void scripting_Player_SetScore(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetRoundScore(uint32 playerId);
SMM_API void scripting_Player_SetRoundScore(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetRoundsWon(uint32 playerId);
SMM_API void scripting_Player_SetRoundsWon(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetMVPs(uint32 playerId);
SMM_API void scripting_Player_SetMVPs(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetUpdateCounter(uint32 playerId);
SMM_API void scripting_Player_SetUpdateCounter(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetShowHints(uint32 playerId);
SMM_API void scripting_Player_SetShowHints(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetNextTimeCheck(uint32 playerId);
SMM_API void scripting_Player_SetNextTimeCheck(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetJustDidTeamKill(uint32 playerId);
SMM_API void scripting_Player_SetJustDidTeamKill(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetPunishForTeamKill(uint32 playerId);
SMM_API void scripting_Player_SetPunishForTeamKill(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetGaveTeamDamageWarning(uint32 playerId);
SMM_API void scripting_Player_SetGaveTeamDamageWarning(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetGaveTeamDamageWarningThisRound(uint32 playerId);
SMM_API void scripting_Player_SetGaveTeamDamageWarningThisRound(uint32 playerId, bool val);
SMM_API double scripting_Player_GetLastReceivedPacketPlatFloatTime(uint32 playerId);
SMM_API void scripting_Player_SetLastReceivedPacketPlatFloatTime(uint32 playerId, double val);
SMM_API float scripting_Player_GetLastTeamDamageWarningTime(uint32 playerId);
SMM_API void scripting_Player_SetLastTeamDamageWarningTime(uint32 playerId, float val);
SMM_API float scripting_Player_GetLastTimePlayerWasDisconnectedForPawnsRemove(uint32 playerId);
SMM_API void scripting_Player_SetLastTimePlayerWasDisconnectedForPawnsRemove(uint32 playerId, float val);
SMM_API uint32_t scripting_Player_GetSuspiciousHitCount(uint32 playerId);
SMM_API void scripting_Player_SetSuspiciousHitCount(uint32 playerId, uint32_t val);
SMM_API uint32_t scripting_Player_GetNonSuspiciousHitStreak(uint32 playerId);
SMM_API void scripting_Player_SetNonSuspiciousHitStreak(uint32 playerId, uint32_t val);

SMM_API uint32_t scripting_Player_GetDisplayHistoryBits(uint32 playerId);
SMM_API void scripting_Player_SetDisplayHistoryBits(uint32 playerId, uint32_t val);
SMM_API float scripting_Player_GetLastAttackedTeammate(uint32 playerId);
SMM_API void scripting_Player_SetLastAttackedTeammate(uint32 playerId, float val);
SMM_API float scripting_Player_GetBlindUntilTime(uint32 playerId);
SMM_API void scripting_Player_SetBlindUntilTime(uint32 playerId, float val);
SMM_API float scripting_Player_GetBlindStartTime(uint32 playerId);
SMM_API void scripting_Player_SetBlindStartTime(uint32 playerId, float val);
SMM_API float scripting_Player_GetallowAutoFollowTime(uint32 playerId);
SMM_API void scripting_Player_SetallowAutoFollowTime(uint32 playerId, float val);
SMM_API int32_t scripting_Player_GetSpotRules(uint32 playerId);
SMM_API void scripting_Player_SetSpotRules(uint32 playerId, int32_t val);
SMM_API CSPlayerState scripting_Player_GetPlayerState(uint32 playerId);
SMM_API void scripting_Player_SetPlayerState(uint32 playerId, CSPlayerState val);
SMM_API float scripting_Player_GetLastDistanceTraveledNotice(uint32 playerId);
SMM_API void scripting_Player_SetLastDistanceTraveledNotice(uint32 playerId, float val);
SMM_API float scripting_Player_GetAccumulatedDistanceTraveled(uint32 playerId);
SMM_API void scripting_Player_SetAccumulatedDistanceTraveled(uint32 playerId, float val);
SMM_API float scripting_Player_GetLastFriendlyFireDamageReductionRatio(uint32 playerId);
SMM_API void scripting_Player_SetLastFriendlyFireDamageReductionRatio(uint32 playerId, float val);
SMM_API bool scripting_Player_GetRespawning(uint32 playerId);
SMM_API void scripting_Player_SetRespawning(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetLastPickupPriority(uint32 playerId);
SMM_API void scripting_Player_SetLastPickupPriority(uint32 playerId, int32_t val);
SMM_API float scripting_Player_GetLastPickupPriorityTime(uint32 playerId);
SMM_API void scripting_Player_SetLastPickupPriorityTime(uint32 playerId, float val);
SMM_API bool scripting_Player_GetIsScoped(uint32 playerId);
SMM_API void scripting_Player_SetIsScoped(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetIsWalking(uint32 playerId);
SMM_API void scripting_Player_SetIsWalking(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetResumeZoom(uint32 playerId);
SMM_API void scripting_Player_SetResumeZoom(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetIsDefusing(uint32 playerId);
SMM_API void scripting_Player_SetIsDefusing(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetIsGrabbingHostage(uint32 playerId);
SMM_API void scripting_Player_SetIsGrabbingHostage(uint32 playerId, bool val);
SMM_API CSPlayerBlockingUseAction_t scripting_Player_GetBlockingUseActionInProgress(uint32 playerId);
SMM_API void scripting_Player_SetBlockingUseActionInProgress(uint32 playerId, CSPlayerBlockingUseAction_t val);
SMM_API float scripting_Player_GetImmuneToGunGameDamageTime(uint32 playerId);
SMM_API void scripting_Player_SetImmuneToGunGameDamageTime(uint32 playerId, float val);
SMM_API bool scripting_Player_GetGunGameImmunity(uint32 playerId);
SMM_API void scripting_Player_SetGunGameImmunity(uint32 playerId, bool val);
SMM_API float scripting_Player_GetMolotovDamageTime(uint32 playerId);
SMM_API void scripting_Player_SetMolotovDamageTime(uint32 playerId, float val);
SMM_API bool scripting_Player_GetHasMovedSinceSpawn(uint32 playerId);
SMM_API void scripting_Player_SetHasMovedSinceSpawn(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetCanMoveDuringFreezePeriod(uint32 playerId);
SMM_API void scripting_Player_SetCanMoveDuringFreezePeriod(uint32 playerId, bool val);
SMM_API float scripting_Player_GetGuardianTooFarDistFrac(uint32 playerId);
SMM_API void scripting_Player_SetGuardianTooFarDistFrac(uint32 playerId, float val);
SMM_API float scripting_Player_GetNextGuardianTooFarHurtTime(uint32 playerId);
SMM_API void scripting_Player_SetNextGuardianTooFarHurtTime(uint32 playerId, float val);
SMM_API float scripting_Player_GetDetectedByEnemySensorTime(uint32 playerId);
SMM_API void scripting_Player_SetDetectedByEnemySensorTime(uint32 playerId, float val);
SMM_API float scripting_Player_GetDealtDamageToEnemyMostRecentTimestamp(uint32 playerId);
SMM_API void scripting_Player_SetDealtDamageToEnemyMostRecentTimestamp(uint32 playerId, float val);
SMM_API float scripting_Player_GetLastEquippedHelmetTime(uint32 playerId);
SMM_API void scripting_Player_SetLastEquippedHelmetTime(uint32 playerId, float val);
SMM_API float scripting_Player_GetLastEquippedArmorTime(uint32 playerId);
SMM_API void scripting_Player_SetLastEquippedArmorTime(uint32 playerId, float val);
SMM_API int32_t scripting_Player_GetHeavyAssaultSuitCooldownRemaining(uint32 playerId);
SMM_API void scripting_Player_SetHeavyAssaultSuitCooldownRemaining(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetResetArmorNextSpawn(uint32 playerId);
SMM_API void scripting_Player_SetResetArmorNextSpawn(uint32 playerId, bool val);
SMM_API float scripting_Player_GetLastBumpMineBumpTime(uint32 playerId);
SMM_API void scripting_Player_SetLastBumpMineBumpTime(uint32 playerId, float val);
SMM_API float scripting_Player_GetEmitSoundTime(uint32 playerId);
SMM_API void scripting_Player_SetEmitSoundTime(uint32 playerId, float val);
SMM_API int32_t scripting_Player_GetNumSpawns(uint32 playerId);
SMM_API void scripting_Player_SetNumSpawns(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetShouldHaveCash(uint32 playerId);
SMM_API void scripting_Player_SetShouldHaveCash(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetInvalidSteamLogonDelayed(uint32 playerId);
SMM_API void scripting_Player_SetInvalidSteamLogonDelayed(uint32 playerId, bool val);
SMM_API float scripting_Player_GetLastAction(uint32 playerId);
SMM_API void scripting_Player_SetLastAction(uint32 playerId, float val);
SMM_API float scripting_Player_GetLastGivenDefuserTime(uint32 playerId);
SMM_API void scripting_Player_SetLastGivenDefuserTime(uint32 playerId, float val);
SMM_API float scripting_Player_GetLastGivenBombTime(uint32 playerId);
SMM_API void scripting_Player_SetLastGivenBombTime(uint32 playerId, float val);
SMM_API bool scripting_Player_GetHasNightVision(uint32 playerId);
SMM_API void scripting_Player_SetHasNightVision(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetNightVisionOn(uint32 playerId);
SMM_API void scripting_Player_SetNightVisionOn(uint32 playerId, bool val);
SMM_API float scripting_Player_GetNextRadarUpdateTime(uint32 playerId);
SMM_API void scripting_Player_SetNextRadarUpdateTime(uint32 playerId, float val);
SMM_API float scripting_Player_GetLastMoneyUpdateTime(uint32 playerId);
SMM_API void scripting_Player_SetLastMoneyUpdateTime(uint32 playerId, float val);
SMM_API float scripting_Player_GetIntroCamTime(uint32 playerId);
SMM_API void scripting_Player_SetIntroCamTime(uint32 playerId, float val);
SMM_API bool scripting_Player_GetInNoDefuseArea(uint32 playerId);
SMM_API void scripting_Player_SetInNoDefuseArea(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetKilledByTaser(uint32 playerId);
SMM_API void scripting_Player_SetKilledByTaser(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetMoveState(uint32 playerId);
SMM_API void scripting_Player_SetMoveState(uint32 playerId, int32_t val);
SMM_API float scripting_Player_GetGrenadeParameterStashTime(uint32 playerId);
SMM_API void scripting_Player_SetGrenadeParameterStashTime(uint32 playerId, float val);
SMM_API bool scripting_Player_GetGrenadeParametersStashed(uint32 playerId);
SMM_API void scripting_Player_SetGrenadeParametersStashed(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetDiedAirborne(uint32 playerId);
SMM_API void scripting_Player_SetDiedAirborne(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetWhichBombZone(uint32 playerId);
SMM_API void scripting_Player_SetWhichBombZone(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetInBombZoneTrigger(uint32 playerId);
SMM_API void scripting_Player_SetInBombZoneTrigger(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetWasInBombZoneTrigger(uint32 playerId);
SMM_API void scripting_Player_SetWasInBombZoneTrigger(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetDirection(uint32 playerId);
SMM_API void scripting_Player_SetDirection(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetShotsFired(uint32 playerId);
SMM_API void scripting_Player_SetShotsFired(uint32 playerId, int32_t val);
SMM_API float scripting_Player_GetFlinchStack(uint32 playerId);
SMM_API void scripting_Player_SetFlinchStack(uint32 playerId, float val);
SMM_API float scripting_Player_GetHitHeading(uint32 playerId);
SMM_API void scripting_Player_SetHitHeading(uint32 playerId, float val);
SMM_API int32_t scripting_Player_GetHitBodyPart(uint32 playerId);
SMM_API void scripting_Player_SetHitBodyPart(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetHostagesKilled(uint32 playerId);
SMM_API void scripting_Player_SetHostagesKilled(uint32 playerId, int32_t val);
SMM_API float scripting_Player_GetFlashMaxAlpha(uint32 playerId);
SMM_API void scripting_Player_SetFlashMaxAlpha(uint32 playerId, float val);
SMM_API float scripting_Player_GetProgressBarStartTime(uint32 playerId);
SMM_API void scripting_Player_SetProgressBarStartTime(uint32 playerId, float val);
SMM_API int32_t scripting_Player_GetProgressBarDuration(uint32 playerId);
SMM_API void scripting_Player_SetProgressBarDuration(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetWaitForNoAttack(uint32 playerId);
SMM_API void scripting_Player_SetWaitForNoAttack(uint32 playerId, bool val);
SMM_API float scripting_Player_GetLowerBodyYawTarget(uint32 playerId);
SMM_API void scripting_Player_SetLowerBodyYawTarget(uint32 playerId, float val);
SMM_API bool scripting_Player_GetStrafing(uint32 playerId);
SMM_API void scripting_Player_SetStrafing(uint32 playerId, bool val);
SMM_API float scripting_Player_GetIgnoreLadderJumpTime(uint32 playerId);
SMM_API void scripting_Player_SetIgnoreLadderJumpTime(uint32 playerId, float val);
SMM_API float scripting_Player_GetSlopeDropOffset(uint32 playerId);
SMM_API void scripting_Player_SetSlopeDropOffset(uint32 playerId, float val);
SMM_API float scripting_Player_GetSlopeDropHeight(uint32 playerId);
SMM_API void scripting_Player_SetSlopeDropHeight(uint32 playerId, float val);
SMM_API int32_t scripting_Player_GetLastWeaponFireUsercmd(uint32 playerId);
SMM_API void scripting_Player_SetLastWeaponFireUsercmd(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetVCollisionInitted(uint32 playerId);
SMM_API void scripting_Player_SetVCollisionInitted(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetIsSpawning(uint32 playerId);
SMM_API void scripting_Player_SetIsSpawning(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetHideTargetID(uint32 playerId);
SMM_API void scripting_Player_SetHideTargetID(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetNumDangerZoneDamageHits(uint32 playerId);
SMM_API void scripting_Player_SetNumDangerZoneDamageHits(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetHud_MiniScoreHidden(uint32 playerId);
SMM_API void scripting_Player_SetHud_MiniScoreHidden(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetHud_RadarHidden(uint32 playerId);
SMM_API void scripting_Player_SetHud_RadarHidden(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetLastConcurrentKilled(uint32 playerId);
SMM_API void scripting_Player_SetLastConcurrentKilled(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetDeathCamMusic(uint32 playerId);
SMM_API void scripting_Player_SetDeathCamMusic(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetAddonBits(uint32 playerId);
SMM_API void scripting_Player_SetAddonBits(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetPrimaryAddon(uint32 playerId);
SMM_API void scripting_Player_SetPrimaryAddon(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetSecondaryAddon(uint32 playerId);
SMM_API void scripting_Player_SetSecondaryAddon(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetNumEnemiesKilledThisSpawn(uint32 playerId);
SMM_API void scripting_Player_SetNumEnemiesKilledThisSpawn(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetNumEnemiesKilledThisRound(uint32 playerId);
SMM_API void scripting_Player_SetNumEnemiesKilledThisRound(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetNumEnemiesAtRoundStart(uint32 playerId);
SMM_API void scripting_Player_SetNumEnemiesAtRoundStart(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetWasNotKilledNaturally(uint32 playerId);
SMM_API void scripting_Player_SetWasNotKilledNaturally(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetDeathFlags(uint32 playerId);
SMM_API void scripting_Player_SetDeathFlags(uint32 playerId, int32_t val);
SMM_API uint16_t scripting_Player_GetCurrentEquipmentValue(uint32 playerId);
SMM_API void scripting_Player_SetCurrentEquipmentValue(uint32 playerId, uint16_t val);
SMM_API uint16_t scripting_Player_GetRoundStartEquipmentValue(uint32 playerId);
SMM_API void scripting_Player_SetRoundStartEquipmentValue(uint32 playerId, uint16_t val);
SMM_API uint16_t scripting_Player_GetFreezetimeEndEquipmentValue(uint32 playerId);
SMM_API void scripting_Player_SetFreezetimeEndEquipmentValue(uint32 playerId, uint16_t val);
SMM_API int32_t scripting_Player_GetSurvivalTeamNumber(uint32 playerId);
SMM_API void scripting_Player_SetSurvivalTeamNumber(uint32 playerId, int32_t val);
SMM_API bool scripting_Player_GetHasDeathInfo(uint32 playerId);
SMM_API void scripting_Player_SetHasDeathInfo(uint32 playerId, bool val);
SMM_API float scripting_Player_GetDeathInfoTime(uint32 playerId);
SMM_API void scripting_Player_SetDeathInfoTime(uint32 playerId, float val);
SMM_API bool scripting_Player_GetKilledByHeadshot(uint32 playerId);
SMM_API void scripting_Player_SetKilledByHeadshot(uint32 playerId, bool val);
SMM_API int32_t scripting_Player_GetLastHitBox(uint32 playerId);
SMM_API void scripting_Player_SetLastHitBox(uint32 playerId, int32_t val);
SMM_API int32_t scripting_Player_GetLastHealth(uint32 playerId);
SMM_API void scripting_Player_SetLastHealth(uint32 playerId, int32_t val);
SMM_API float scripting_Player_GetLastCollisionCeiling(uint32 playerId);
SMM_API void scripting_Player_SetLastCollisionCeiling(uint32 playerId, float val);
SMM_API float scripting_Player_GetLastCollisionCeilingChangeTime(uint32 playerId);
SMM_API void scripting_Player_SetLastCollisionCeilingChangeTime(uint32 playerId, float val);
SMM_API bool scripting_Player_GetBotAllowActive(uint32 playerId);
SMM_API void scripting_Player_SetBotAllowActive(uint32 playerId, bool val);
SMM_API bool scripting_Player_GetCommittingSuicideOnTeamChange(uint32 playerId);
SMM_API void scripting_Player_SetCommittingSuicideOnTeamChange(uint32 playerId, bool val);

SMM_API void scripting_Player_SetGloves(uint32 playerId, uint16_t defindex, int paintkit, int seed, float wear);
SMM_API void scripting_Player_SetModel(uint32 playerId, const char *model);
SMM_API void scripting_Player_SetMusicKit(uint32 playerId, int musicid);

SMM_API const char *scripting_Player_GetChatTag(uint32 playerId);
SMM_API void scripting_Player_SetChatTag(uint32 playerId, const char *tag);
SMM_API void scripting_Player_SetChatTagColor(uint32 playerId, const char *tagcolor);
SMM_API void scripting_Player_SetNameColor(uint32 playerId, const char *namecolor);
SMM_API void scripting_Player_SetChatColor(uint32 playerId, const char *chatcolor);
SMM_API bool scripting_Player_IsFakeClient(uint32 playerId);

SMM_API void scripting_Precacher_AddModel(const char *model);

SMM_API void scripting_Server_ExecuteCommand(const char *str);
SMM_API uint16 scripting_Server_GetMaxPlayers();
SMM_API const char *scripting_Server_GetMapName();
SMM_API bool scripting_Server_IsMapValid(const char *map);
SMM_API bool scripting_Server_IsPistolRound();
SMM_API int32_t scripting_server_GetTotalRounds();
SMM_API float scripting_Server_GetCurrentTime();
SMM_API int scripting_Server_GetTickCount();
SMM_API void scripting_Server_SetQueuedMatchmaking(bool status);
SMM_API bool scripting_Server_GetQueuedMatchmaking();

SMM_API const char *scripting_Translations_Fetch(const char *key);

SMM_API const char *scripting_Exports_Call(const char *plugin_name, const char *export_name, const char *jsonData);
SMM_API void scripting_Exports_Register(const char *plugin_name, const char *export_name, void *functionPtr);
SMM_API void scripting_Exports_Unregister(const char *plugin_name, const char *export_name);

SMM_API void scripting_Menus_Register(const char *plugin_name, const char *id, const char *title, const char *color, const char *items);
SMM_API void scripting_Menus_Unregister(const char *plugin_name, const char *id);

SMM_API void scripting_Print(const char *str);
SMM_API PluginState scripting_GetPluginState(const char *plugin_name);

void SetupLuaCommands(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaConfiguration(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaConvars(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaDatabase(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaEntities(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaExports(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaFiles(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaGameEvents(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaHTTP(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaLogger(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaMenus(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaPlayer(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaPlayerManager(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaPrecacher(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaServer(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaTimers(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaTranslation(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaTypes(luacpp::LuaState *state, Plugin *plugin);
void SetupLuaUtils(luacpp::LuaState *state, Plugin *plugin);

template <typename T, typename... Args>
void CallCPPFunctionNoReturn(std::string function, Args... args);
template <typename... Args>
void CallLuaFunctionNoReturn(std::string function, Args... args);

#endif